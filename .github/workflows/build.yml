name: Build

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-windows-release:
    name: Build Release
    runs-on: windows-latest
    if: github.ref_name == 'master' || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'master')

    defaults:
      run:
        shell: pwsh
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup MSVC environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Configure
        run: cmake --preset x64-clang-release

      - name: Build
        run: cmake --build --preset x64-clang-release

      - name: Read Version
        id: get_version
        run: |
          $version = Get-Content out/build/x64-clang-release/version.txt
          echo "version=$version" >> $env:GITHUB_OUTPUT
      
      - name: Stage Artifacts
        run: |
          mkdir -p release/mods/apclient
          cp out/build/x64-clang-release/okami-apclient.dll release/mods/apclient/
          cp out/build/x64-clang-release/cacert.pem release/mods/apclient/
          cp out/build/x64-clang-release/apclient-loader.dll release/mods/

      - name: Zip Artifacts
        run: |
          Compress-Archive -Path release/* -DestinationPath okami-apclient-${{ steps.get_version.outputs.version }}.zip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: okami-apclient-${{ steps.get_version.outputs.version }}
          path: okami-apclient-${{ steps.get_version.outputs.version }}.zip

  build-windows-debug:
    name: Build Debug
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read
      checks: write

    defaults:
      run:
        shell: pwsh
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Configure CMake
        run: cmake --preset x64-clang-debug

      - name: Build
        run: cmake --build --preset x64-clang-debug

      - name: Run Unit Tests
        run: out/build/x64-clang-debug/okami-tests.exe --reporter JUnit --out out/build/x64-clang-debug/Test.xml
        env:
          CTEST_OUTPUT_ON_FAILURE: 1

      - name: Publish Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Unit Tests
          path: 'out/build/x64-clang-debug/Test.xml'
          reporter: java-junit

      - name: Upload JUnit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-test-results
          path: '**/Test.xml'

      - name: Read Version
        id: get_version
        run: |
          $version = Get-Content out/build/x64-clang-debug/version.txt
          echo "version=$version" >> $env:GITHUB_OUTPUT
      
      - name: Stage Artifacts
        run: |
          mkdir -p debug/mods/apclient
          cp out/build/x64-clang-debug/okami-apclient.dll debug/mods/apclient/
          cp out/build/x64-clang-debug/cacert.pem debug/mods/apclient/
          cp out/build/x64-clang-debug/apclient-loader.dll debug/mods/

      - name: Zip Artifacts
        run: |
          Compress-Archive -Path debug/* -DestinationPath okami-apclient-${{ steps.get_version.outputs.version }}.zip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: okami-apclient-${{ steps.get_version.outputs.version }}
          path: okami-apclient-${{ steps.get_version.outputs.version }}.zip
