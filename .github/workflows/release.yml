name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup MSVC environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: pip install pyyaml

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: build/x64-clang-release/vcpkg_installed
          key: ${{ runner.os }}-vcpkg-release-${{ hashFiles('**/vcpkg.json', '**/vcpkg-configuration.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-release-
            ${{ runner.os }}-vcpkg-

      - name: Configure CMake
        run: cmake --preset x64-clang-release

      - name: Build
        run: cmake --build --preset x64-clang-release

      - name: Get version from tag
        id: get_version
        run: |
          echo "GITHUB_REF: $env:GITHUB_REF"
          $version = $env:GITHUB_REF -replace 'refs/tags/', ''
          echo "Extracted version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Stage Release Files
        run: |
          $buildDir = "build/x64-clang-release"
          $stageDir = "release"

          New-Item -ItemType Directory -Force -Path "$stageDir/apclient"
          Copy-Item "$buildDir/src/okami-apclient/okami-apclient.dll" "$stageDir/apclient/"
          Copy-Item "$buildDir/cacert.pem" "$stageDir/apclient/"

      - name: Create Release Archive
        run: |
          cd release
          Compress-Archive -Path * -DestinationPath "../okami-apclient-${{ steps.get_version.outputs.version }}.zip"
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Okami APClient ${{ steps.get_version.outputs.version }}"
          files: |
            okami-apclient-${{ steps.get_version.outputs.version }}.zip
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.version, 'alpha') || contains(steps.get_version.outputs.version, 'beta') || contains(steps.get_version.outputs.version, 'rc') }}
          generate_release_notes: true
